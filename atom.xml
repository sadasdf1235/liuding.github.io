<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LD&#39;s Blog</title>
  
  <subtitle>编程 • 生活 • 分享</subtitle>
  <link href="https://sadasdf1235.github.io/atom.xml" rel="self"/>
  
  <link href="https://sadasdf1235.github.io/"/>
  <updated>2025-01-16T12:29:39.713Z</updated>
  <id>https://sadasdf1235.github.io/</id>
  
  <author>
    <name>ld</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端请求应该如何封装？</title>
    <link href="https://sadasdf1235.github.io/2025/01/17/%E5%89%8D%E7%AB%AF%E8%AF%B7%E6%B1%82%E5%BA%94%E8%AF%A5%E5%A6%82%E4%BD%95%E5%B0%81%E8%A3%85/"/>
    <id>https://sadasdf1235.github.io/2025/01/17/%E5%89%8D%E7%AB%AF%E8%AF%B7%E6%B1%82%E5%BA%94%E8%AF%A5%E5%A6%82%E4%BD%95%E5%B0%81%E8%A3%85/</id>
    <published>2025-01-17T07:30:00.000Z</published>
    <updated>2025-01-16T12:29:39.713Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="为什么要封装请求？"><a href="#为什么要封装请求？" class="headerlink" title="为什么要封装请求？"></a>为什么要封装请求？</h2><p>在前端开发中，合理的请求封装可以：</p><ol><li>统一处理请求&#x2F;响应拦截</li><li>规范错误处理</li><li>简化请求调用</li><li>提高代码复用性</li><li>便于维护和扩展</li></ol><p>让我们一步步实现一个完整的请求封装方案。</p><h2 id="基础封装"><a href="#基础封装" class="headerlink" title="基础封装"></a>基础封装</h2><h3 id="1-创建请求实例"><a href="#1-创建请求实例" class="headerlink" title="1. 创建请求实例"></a>1. 创建请求实例</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/utils/request.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> axios, &#123; <span class="title class_">AxiosInstance</span>, <span class="title class_">AxiosRequestConfig</span>, <span class="title class_">AxiosResponse</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建请求实例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RequestHttp</span> &#123;</span><br><span class="line">  <span class="comment">// axios 实例</span></span><br><span class="line">  <span class="keyword">private</span> <span class="attr">instance</span>: <span class="title class_">AxiosInstance</span></span><br><span class="line">  <span class="comment">// 基础配置</span></span><br><span class="line">  <span class="keyword">private</span> <span class="attr">baseConfig</span>: <span class="title class_">AxiosRequestConfig</span> = &#123;</span><br><span class="line">    <span class="attr">baseURL</span>: process.<span class="property">env</span>.<span class="property">VUE_APP_BASE_API</span>,</span><br><span class="line">    <span class="attr">timeout</span>: <span class="number">10000</span>,</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="title function_">constructor</span>(<span class="params"><span class="attr">config</span>?: <span class="title class_">AxiosRequestConfig</span></span>) &#123;</span><br><span class="line">    <span class="comment">// 创建实例</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">instance</span> = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">      ...<span class="variable language_">this</span>.<span class="property">baseConfig</span>,</span><br><span class="line">      ...config,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化拦截器</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">initInterceptors</span>()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 初始化拦截器</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="title function_">initInterceptors</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 请求拦截器</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">instance</span>.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">      <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 在发送请求之前做些什么</span></span><br><span class="line">        <span class="keyword">const</span> token = <span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> (token) &#123;</span><br><span class="line">          config.<span class="property">headers</span>[<span class="string">&#x27;Authorization&#x27;</span>] = <span class="string">`Bearer <span class="subst">$&#123;token&#125;</span>`</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> config</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 对请求错误做些什么</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 响应拦截器</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">instance</span>.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">      <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 对响应数据做点什么</span></span><br><span class="line">        <span class="keyword">const</span> &#123; code, data, message &#125; = response.<span class="property">data</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据自定义错误码判断请求是否成功</span></span><br><span class="line">        <span class="keyword">if</span> (code === <span class="number">200</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> data</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 处理业务错误</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">handleBusinessError</span>(code, message)</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(message))</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 对响应错误做点什么</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">handleNetworkError</span>(error)</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 处理业务错误</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="title function_">handleBusinessError</span>(<span class="params"><span class="attr">code</span>: <span class="built_in">number</span>, <span class="attr">message</span>: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">    <span class="keyword">switch</span> (code) &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">401</span>:</span><br><span class="line">        <span class="comment">// 未登录或token过期</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">redirectToLogin</span>()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="keyword">case</span> <span class="number">403</span>:</span><br><span class="line">        <span class="comment">// 权限不足</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;权限不足&#x27;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="attr">default</span>:</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(message)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 处理网络错误</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="title function_">handleNetworkError</span>(<span class="params"><span class="attr">error</span>: <span class="built_in">any</span></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> message = <span class="string">&#x27;请求失败&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> (error.<span class="property">response</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> status = error.<span class="property">response</span>.<span class="property">status</span></span><br><span class="line">      <span class="keyword">switch</span> (status) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">400</span>:</span><br><span class="line">          message = <span class="string">&#x27;请求错误&#x27;</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">401</span>:</span><br><span class="line">          message = <span class="string">&#x27;未授权，请登录&#x27;</span></span><br><span class="line">          <span class="variable language_">this</span>.<span class="title function_">redirectToLogin</span>()</span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">403</span>:</span><br><span class="line">          message = <span class="string">&#x27;拒绝访问&#x27;</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">404</span>:</span><br><span class="line">          message = <span class="string">&#x27;请求地址出错&#x27;</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">408</span>:</span><br><span class="line">          message = <span class="string">&#x27;请求超时&#x27;</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">500</span>:</span><br><span class="line">          message = <span class="string">&#x27;服务器内部错误&#x27;</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">501</span>:</span><br><span class="line">          message = <span class="string">&#x27;服务未实现&#x27;</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">502</span>:</span><br><span class="line">          message = <span class="string">&#x27;网关错误&#x27;</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">503</span>:</span><br><span class="line">          message = <span class="string">&#x27;服务不可用&#x27;</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">504</span>:</span><br><span class="line">          message = <span class="string">&#x27;网关超时&#x27;</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">505</span>:</span><br><span class="line">          message = <span class="string">&#x27;HTTP版本不受支持&#x27;</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="attr">default</span>:</span><br><span class="line">          message = <span class="string">`未知错误<span class="subst">$&#123;status&#125;</span>`</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(message)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 重定向到登录页</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="title function_">redirectToLogin</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 清除用户信息</span></span><br><span class="line">    <span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&#x27;token&#x27;</span>)</span><br><span class="line">    <span class="comment">// 跳转登录页</span></span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span> = <span class="string">&#x27;/login&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * GET请求</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> get&lt;T = <span class="built_in">any</span>&gt;(</span><br><span class="line">    <span class="attr">url</span>: <span class="built_in">string</span>,</span><br><span class="line">    <span class="attr">params</span>?: <span class="built_in">any</span>,</span><br><span class="line">    <span class="attr">config</span>?: <span class="title class_">AxiosRequestConfig</span></span><br><span class="line">  ): <span class="title class_">Promise</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">instance</span>.<span class="title function_">get</span>(url, &#123; params, ...config &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * POST请求</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> post&lt;T = <span class="built_in">any</span>&gt;(</span><br><span class="line">    <span class="attr">url</span>: <span class="built_in">string</span>,</span><br><span class="line">    <span class="attr">data</span>?: <span class="built_in">any</span>,</span><br><span class="line">    <span class="attr">config</span>?: <span class="title class_">AxiosRequestConfig</span></span><br><span class="line">  ): <span class="title class_">Promise</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">instance</span>.<span class="title function_">post</span>(url, data, config)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * PUT请求</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> put&lt;T = <span class="built_in">any</span>&gt;(</span><br><span class="line">    <span class="attr">url</span>: <span class="built_in">string</span>,</span><br><span class="line">    <span class="attr">data</span>?: <span class="built_in">any</span>,</span><br><span class="line">    <span class="attr">config</span>?: <span class="title class_">AxiosRequestConfig</span></span><br><span class="line">  ): <span class="title class_">Promise</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">instance</span>.<span class="title function_">put</span>(url, data, config)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * DELETE请求</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">delete</span>&lt;T = <span class="built_in">any</span>&gt;(<span class="attr">url</span>: <span class="built_in">string</span>, <span class="attr">config</span>?: <span class="title class_">AxiosRequestConfig</span>): <span class="title class_">Promise</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">instance</span>.<span class="title function_">delete</span>(url, config)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导出请求实例</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> http = <span class="keyword">new</span> <span class="title class_">RequestHttp</span>()</span><br></pre></td></tr></table></figure><h2 id="API-封装"><a href="#API-封装" class="headerlink" title="API 封装"></a>API 封装</h2><h3 id="1-定义接口类型"><a href="#1-定义接口类型" class="headerlink" title="1. 定义接口类型"></a>1. 定义接口类型</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/types/api.ts</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 响应数据接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">ResponseData</span>&lt;T = <span class="built_in">any</span>&gt; &#123;</span><br><span class="line">  <span class="attr">code</span>: <span class="built_in">number</span></span><br><span class="line">  <span class="attr">data</span>: T</span><br><span class="line">  <span class="attr">message</span>: <span class="built_in">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分页参数接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">PageParams</span> &#123;</span><br><span class="line">  <span class="attr">page</span>: <span class="built_in">number</span></span><br><span class="line">  <span class="attr">pageSize</span>: <span class="built_in">number</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分页响应接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">PageResponse</span>&lt;T&gt; &#123;</span><br><span class="line">  <span class="attr">list</span>: T[]</span><br><span class="line">  <span class="attr">total</span>: <span class="built_in">number</span></span><br><span class="line">  <span class="attr">page</span>: <span class="built_in">number</span></span><br><span class="line">  <span class="attr">pageSize</span>: <span class="built_in">number</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-模块化-API-管理"><a href="#2-模块化-API-管理" class="headerlink" title="2. 模块化 API 管理"></a>2. 模块化 API 管理</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/api/user.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; http &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">type</span> &#123; <span class="title class_">ResponseData</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/types/api&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">IUser</span> &#123;</span><br><span class="line">  <span class="attr">id</span>: <span class="built_in">number</span></span><br><span class="line">  <span class="attr">username</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="attr">email</span>: <span class="built_in">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录参数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">interface</span> <span class="title class_">LoginParams</span> &#123;</span><br><span class="line">  <span class="attr">username</span>: <span class="built_in">string</span></span><br><span class="line">  <span class="attr">password</span>: <span class="built_in">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户API</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> <span class="title class_">UserAPI</span> &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 登录</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">login</span>(<span class="params"><span class="attr">params</span>: <span class="title class_">LoginParams</span></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> http.<span class="property">post</span>&lt;<span class="title class_">ResponseData</span>&lt;<span class="built_in">string</span>&gt;&gt;(<span class="string">&#x27;/auth/login&#x27;</span>, params)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 获取用户信息</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">getUserInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> http.<span class="property">get</span>&lt;<span class="title class_">ResponseData</span>&lt;<span class="title class_">IUser</span>&gt;&gt;(<span class="string">&#x27;/user/info&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 更新用户信息</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">static</span> <span class="title function_">updateUserInfo</span>(<span class="params"><span class="attr">data</span>: <span class="title class_">Partial</span>&lt;<span class="title class_">IUser</span>&gt;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> http.<span class="property">put</span>&lt;<span class="title class_">ResponseData</span>&lt;<span class="title class_">IUser</span>&gt;&gt;(<span class="string">&#x27;/user/info&#x27;</span>, data)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><h3 id="1-在-Vue-组件中使用"><a href="#1-在-Vue-组件中使用" class="headerlink" title="1. 在 Vue 组件中使用"></a>1. 在 Vue 组件中使用</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/views/Login.vue</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; defineComponent, ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">UserAPI</span>, <span class="keyword">type</span> <span class="title class_">LoginParams</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/user&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineComponent</span>(&#123;</span><br><span class="line">  <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> loginForm = ref&lt;<span class="title class_">LoginParams</span>&gt;(&#123;</span><br><span class="line">      <span class="attr">username</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> loading = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleLogin</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        loading.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">const</span> token = <span class="keyword">await</span> <span class="title class_">UserAPI</span>.<span class="title function_">login</span>(loginForm.<span class="property">value</span>)</span><br><span class="line">        <span class="comment">// 保存token</span></span><br><span class="line">        <span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;token&#x27;</span>, token)</span><br><span class="line">        <span class="comment">// 获取用户信息</span></span><br><span class="line">        <span class="keyword">const</span> userInfo = <span class="keyword">await</span> <span class="title class_">UserAPI</span>.<span class="title function_">getUserInfo</span>()</span><br><span class="line">        <span class="comment">// 处理用户信息...</span></span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;登录失败:&#x27;</span>, error)</span><br><span class="line">      &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        loading.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      loginForm,</span><br><span class="line">      loading,</span><br><span class="line">      handleLogin,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="2-使用-Composition-API-封装请求逻辑"><a href="#2-使用-Composition-API-封装请求逻辑" class="headerlink" title="2. 使用 Composition API 封装请求逻辑"></a>2. 使用 Composition API 封装请求逻辑</h3><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// src/composables/useRequest.ts</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">RequestOptions</span> &#123;</span><br><span class="line">  <span class="attr">loading</span>?: <span class="built_in">boolean</span></span><br><span class="line">  <span class="attr">onSuccess</span>?: <span class="function">(<span class="params"><span class="attr">data</span>: <span class="built_in">any</span></span>) =&gt;</span> <span class="built_in">void</span></span><br><span class="line">  <span class="attr">onError</span>?: <span class="function">(<span class="params"><span class="attr">error</span>: <span class="built_in">any</span></span>) =&gt;</span> <span class="built_in">void</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> useRequest&lt;T&gt;(</span><br><span class="line">  <span class="attr">requestFn</span>: <span class="function">(<span class="params">...<span class="attr">args</span>: <span class="built_in">any</span>[]</span>) =&gt;</span> <span class="title class_">Promise</span>&lt;T&gt;,</span><br><span class="line">  <span class="attr">options</span>: <span class="title class_">RequestOptions</span> = &#123;&#125;</span><br><span class="line">) &#123;</span><br><span class="line">  <span class="keyword">const</span> data = ref&lt;T | <span class="literal">null</span>&gt;(<span class="literal">null</span>)</span><br><span class="line">  <span class="keyword">const</span> loading = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line">  <span class="keyword">const</span> error = ref&lt;<span class="built_in">any</span>&gt;(<span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">execute</span> = <span class="keyword">async</span> (<span class="params">...<span class="attr">args</span>: <span class="built_in">any</span>[]</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (options.<span class="property">loading</span>) &#123;</span><br><span class="line">        loading.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">requestFn</span>(...args)</span><br><span class="line">      data.<span class="property">value</span> = result</span><br><span class="line"></span><br><span class="line">      options.<span class="property">onSuccess</span>?.(result)</span><br><span class="line">      <span class="keyword">return</span> result</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      error.<span class="property">value</span> = err</span><br><span class="line">      options.<span class="property">onError</span>?.(err)</span><br><span class="line">      <span class="keyword">throw</span> err</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (options.<span class="property">loading</span>) &#123;</span><br><span class="line">        loading.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    data,</span><br><span class="line">    loading,</span><br><span class="line">    error,</span><br><span class="line">    execute,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">  <span class="attr">data</span>: userInfo,</span><br><span class="line">  loading,</span><br><span class="line">  <span class="attr">execute</span>: fetchUserInfo,</span><br><span class="line">&#125; = <span class="title function_">useRequest</span>(<span class="title class_">UserAPI</span>.<span class="property">getUserInfo</span>, &#123;</span><br><span class="line">  <span class="attr">loading</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">onSuccess</span>: <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获取用户信息成功:&#x27;</span>, data)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">onError</span>: <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&#x27;获取用户信息失败:&#x27;</span>, error)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="最佳实践建议"><a href="#最佳实践建议" class="headerlink" title="最佳实践建议"></a>最佳实践建议</h2><ol><li><p><strong>统一配置管理</strong></p><ul><li>使用环境变量管理 API 地址</li><li>统一超时时间配置</li><li>统一错误处理策略</li></ul></li><li><p><strong>类型安全</strong></p><ul><li>使用 TypeScript 定义接口类型</li><li>为 API 响应数据定义类型</li><li>使用泛型约束请求&#x2F;响应数据</li></ul></li><li><p><strong>错误处理</strong></p><ul><li>统一处理网络错误</li><li>统一处理业务错误</li><li>提供友好的错误提示</li></ul></li><li><p><strong>代码组织</strong></p><ul><li>按模块拆分 API</li><li>使用类或对象组织 API 方法</li><li>遵循单一职责原则</li></ul></li><li><p><strong>性能优化</strong></p><ul><li>请求缓存</li><li>取消重复请求</li><li>并发请求控制</li></ul></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>一个好的请求封装应该具备：</p><ol><li>统一的接口规范</li><li>完善的错误处理</li><li>类型安全</li><li>易于维护和扩展</li><li>良好的代码组织</li></ol><p>通过合理的请求封装，可以大大提高开发效率和代码质量。</p><hr><blockquote><p>参考资料：</p><ol><li>Axios 官方文档</li><li>Vue.js 官方文档</li><li>TypeScript 官方文档</li></ol></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="前端开发" scheme="https://sadasdf1235.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="JavaScript" scheme="https://sadasdf1235.github.io/tags/JavaScript/"/>
    
    <category term="Vue" scheme="https://sadasdf1235.github.io/tags/Vue/"/>
    
    <category term="前端" scheme="https://sadasdf1235.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Web 前端" scheme="https://sadasdf1235.github.io/tags/Web-%E5%89%8D%E7%AB%AF/"/>
    
    <category term="HTTP 请求" scheme="https://sadasdf1235.github.io/tags/HTTP-%E8%AF%B7%E6%B1%82/"/>
    
  </entry>
  
  <entry>
    <title>对等依赖报错问题及解决方案</title>
    <link href="https://sadasdf1235.github.io/2025/01/16/%E5%AF%B9%E7%AD%89%E4%BE%9D%E8%B5%96%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://sadasdf1235.github.io/2025/01/16/%E5%AF%B9%E7%AD%89%E4%BE%9D%E8%B5%96%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2025-01-16T12:12:00.000Z</published>
    <updated>2025-01-16T12:12:14.827Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="什么是对等依赖（Peer-Dependencies）？"><a href="#什么是对等依赖（Peer-Dependencies）？" class="headerlink" title="什么是对等依赖（Peer Dependencies）？"></a>什么是对等依赖（Peer Dependencies）？</h2><p>对等依赖（Peer Dependencies）是 npm 包管理系统中的一个重要概念。它表示当前包所依赖的其他包，这些包需要由使用当前包的项目来提供。换句话说，对等依赖声明了：”如果你想使用我这个包，你需要同时安装这些特定版本的其他包”。</p><h2 id="为什么会出现对等依赖报错？"><a href="#为什么会出现对等依赖报错？" class="headerlink" title="为什么会出现对等依赖报错？"></a>为什么会出现对等依赖报错？</h2><p>对等依赖报错通常出现在以下情况：</p><ol><li>版本不匹配：项目中安装的依赖版本与某个包要求的对等依赖版本不符</li><li>依赖缺失：未安装必需的对等依赖</li><li>依赖冲突：多个包要求不同版本的同一个对等依赖</li></ol><h2 id="常见的报错信息"><a href="#常见的报错信息" class="headerlink" title="常见的报错信息"></a>常见的报错信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm WARN ERESOLVE overriding peer dependency</span><br><span class="line">npm WARN ERESOLVE Conflict at [package-name]</span><br><span class="line">npm ERR! peer dep missing</span><br></pre></td></tr></table></figure><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="1-使用-–legacy-peer-deps-参数"><a href="#1-使用-–legacy-peer-deps-参数" class="headerlink" title="1. 使用 –legacy-peer-deps 参数"></a>1. 使用 –legacy-peer-deps 参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --legacy-peer-deps</span><br></pre></td></tr></table></figure><p>这个参数会让 npm 使用 npm v4-v6 的方式处理对等依赖，忽略所有对等依赖的要求。但这不是一个推荐的长期解决方案。</p><h3 id="2-手动安装正确版本"><a href="#2-手动安装正确版本" class="headerlink" title="2. 手动安装正确版本"></a>2. 手动安装正确版本</h3><ol><li>查看报错信息中要求的版本</li><li>手动安装指定版本：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install [package-name]@[version]</span><br></pre></td></tr></table></figure><h3 id="3-使用-pnpm（推荐）"><a href="#3-使用-pnpm（推荐）" class="headerlink" title="3. 使用 pnpm（推荐）"></a>3. 使用 pnpm（推荐）</h3><p>pnpm 提供了更好的依赖管理机制：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局安装 pnpm</span></span><br><span class="line">npm install -g pnpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 pnpm 安装依赖</span></span><br><span class="line">pnpm install</span><br></pre></td></tr></table></figure><h3 id="4-更新-package-json"><a href="#4-更新-package-json" class="headerlink" title="4. 更新 package.json"></a>4. 更新 package.json</h3><p>检查并更新 package.json 中的版本约束：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;package-a&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;peerDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;package-b&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&gt;=2.0.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h2><ol><li><strong>使用锁文件</strong>：确保使用 package-lock.json、yarn.lock 或 pnpm-lock.yaml</li><li><strong>版本控制</strong>：使用语义化版本控制（Semantic Versioning）</li><li><strong>依赖审查</strong>：定期使用 <code>npm audit</code> 或 <code>pnpm audit</code> 检查依赖</li><li><strong>使用现代包管理器</strong>：考虑使用 pnpm 等现代包管理器</li></ol><h2 id="预防措施"><a href="#预防措施" class="headerlink" title="预防措施"></a>预防措施</h2><ol><li>在开发新项目时，提前规划依赖关系</li><li>使用 <code>npm ls</code> 或 <code>pnpm list</code> 检查依赖树</li><li>定期更新依赖到最新的稳定版本</li><li>使用 <code>.npmrc</code> 配置文件统一团队的包管理策略</li></ol><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>对等依赖问题是前端开发中常见的痛点，但通过合理的工具选择和最佳实践，我们可以有效地管理和解决这些问题。推荐使用 pnpm 作为包管理器，它提供了更好的依赖管理机制和更快的安装速度。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://docs.npmjs.com/cli/v8/configuring-npm/package-json#peerdependencies">npm 文档：对等依赖</a></li><li><a href="https://pnpm.io/zh/">pnpm 官方文档</a></li><li><a href="https://semver.org/lang/zh-CN/">语义化版本控制</a></li></ul>]]></content>
    
    
    <summary type="html">本文详细介绍了前端项目中常见的对等依赖（peer dependencies）报错问题，并提供了多种实用的解决方案。</summary>
    
    
    
    <category term="前端开发" scheme="https://sadasdf1235.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="JavaScript" scheme="https://sadasdf1235.github.io/tags/JavaScript/"/>
    
    <category term="前端开发" scheme="https://sadasdf1235.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    <category term="NPM" scheme="https://sadasdf1235.github.io/tags/NPM/"/>
    
    <category term="依赖管理" scheme="https://sadasdf1235.github.io/tags/%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>如何避免重复请求</title>
    <link href="https://sadasdf1235.github.io/2025/01/16/%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E9%87%8D%E5%A4%8D%E8%AF%B7%E6%B1%82/"/>
    <id>https://sadasdf1235.github.io/2025/01/16/%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8D%E9%87%8D%E5%A4%8D%E8%AF%B7%E6%B1%82/</id>
    <published>2025-01-16T07:00:00.000Z</published>
    <updated>2025-01-16T12:29:14.385Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="为什么要避免重复请求？"><a href="#为什么要避免重复请求？" class="headerlink" title="为什么要避免重复请求？"></a>为什么要避免重复请求？</h2><p>在前端开发中，重复请求不仅会增加服务器负载，还可能导致数据不一致或用户体验问题。例如：</p><ul><li>用户快速点击提交按钮导致重复提交表单</li><li>列表页面快速切换导致重复加载数据</li><li>接口响应慢时用户重复操作触发多次请求</li></ul><h2 id="常见解决方案"><a href="#常见解决方案" class="headerlink" title="常见解决方案"></a>常见解决方案</h2><h3 id="1-防抖（Debounce）"><a href="#1-防抖（Debounce）" class="headerlink" title="1. 防抖（Debounce）"></a>1. 防抖（Debounce）</h3><p>防抖是指在一定时间内，只执行最后一次操作。适用于搜索框输入等场景。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 防抖函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> fn 需要防抖的函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> delay 延迟时间（毫秒）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params"><span class="attr">fn</span>: <span class="title class_">Function</span>, <span class="attr">delay</span>: <span class="built_in">number</span></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> <span class="attr">timer</span>: <span class="title class_">NodeJS</span>.<span class="property">Timeout</span> | <span class="literal">null</span> = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">...<span class="attr">args</span>: <span class="built_in">any</span>[]</span>) &#123;</span><br><span class="line">    <span class="comment">// 清除之前的定时器</span></span><br><span class="line">    <span class="keyword">if</span> (timer) <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置新的定时器</span></span><br><span class="line">    timer = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      fn.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args)</span><br><span class="line">    &#125;, delay)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> searchInput = <span class="title function_">debounce</span>(<span class="function">(<span class="params"><span class="attr">query</span>: <span class="built_in">string</span></span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 发起搜索请求</span></span><br><span class="line">  api.<span class="title function_">search</span>(query)</span><br><span class="line">&#125;, <span class="number">300</span>)</span><br></pre></td></tr></table></figure><h3 id="2-节流（Throttle）"><a href="#2-节流（Throttle）" class="headerlink" title="2. 节流（Throttle）"></a>2. 节流（Throttle）</h3><p>节流是指在一定时间内，只执行一次操作。适用于滚动加载等场景。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 节流函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> fn 需要节流的函数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> interval 间隔时间（毫秒）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params"><span class="attr">fn</span>: <span class="title class_">Function</span>, <span class="attr">interval</span>: <span class="built_in">number</span></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> lastTime = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">...<span class="attr">args</span>: <span class="built_in">any</span>[]</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> now = <span class="title class_">Date</span>.<span class="title function_">now</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (now - lastTime &gt;= interval) &#123;</span><br><span class="line">      fn.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args)</span><br><span class="line">      lastTime = now</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> loadMore = <span class="title function_">throttle</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 加载更多数据</span></span><br><span class="line">  api.<span class="title function_">loadNextPage</span>()</span><br><span class="line">&#125;, <span class="number">1000</span>)</span><br></pre></td></tr></table></figure><h3 id="3-请求锁"><a href="#3-请求锁" class="headerlink" title="3. 请求锁"></a>3. 请求锁</h3><p>使用标志位锁定请求状态，防止重复发送。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">RequestLock</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="attr">isRequesting</span>: <span class="built_in">boolean</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">request</span>(<span class="params"><span class="attr">fn</span>: () =&gt; <span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt;</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">isRequesting</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;请求正在进行中，请稍后...&#x27;</span>)</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">isRequesting</span> = <span class="literal">true</span></span><br><span class="line">      <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">fn</span>()</span><br><span class="line">      <span class="keyword">return</span> result</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">isRequesting</span> = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> lock = <span class="keyword">new</span> <span class="title class_">RequestLock</span>()</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">submitForm</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">await</span> lock.<span class="title function_">request</span>(<span class="function">() =&gt;</span> api.<span class="title function_">submit</span>(formData))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-取消重复请求"><a href="#4-取消重复请求" class="headerlink" title="4. 取消重复请求"></a>4. 取消重复请求</h3><p>使用 <code>AbortController</code> 取消之前的请求。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">RequestManager</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="attr">controller</span>: <span class="title class_">AbortController</span> | <span class="literal">null</span> = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">request</span>(<span class="params"><span class="attr">url</span>: <span class="built_in">string</span>, <span class="attr">options</span>: <span class="title class_">RequestInit</span> = &#123;&#125;</span>) &#123;</span><br><span class="line">    <span class="comment">// 取消之前的请求</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">controller</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">controller</span>.<span class="title function_">abort</span>()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建新的控制器</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">controller</span> = <span class="keyword">new</span> <span class="title class_">AbortController</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(url, &#123;</span><br><span class="line">        ...options,</span><br><span class="line">        <span class="attr">signal</span>: <span class="variable language_">this</span>.<span class="property">controller</span>.<span class="property">signal</span>,</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">await</span> response.<span class="title function_">json</span>()</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="keyword">if</span> (error.<span class="property">name</span> === <span class="string">&#x27;AbortError&#x27;</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;请求已取消&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">throw</span> error</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> manager = <span class="keyword">new</span> <span class="title class_">RequestManager</span>()</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">fetchData</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> data = <span class="keyword">await</span> manager.<span class="title function_">request</span>(<span class="string">&#x27;/api/data&#x27;</span>)</span><br><span class="line">  <span class="comment">// 处理数据</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-使用请求缓存"><a href="#5-使用请求缓存" class="headerlink" title="5. 使用请求缓存"></a>5. 使用请求缓存</h3><p>对于短时间内重复的相同请求，可以使用缓存来避免重复发送。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CacheManager</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="attr">cache</span>: <span class="title class_">Map</span>&lt;</span><br><span class="line">    <span class="built_in">string</span>,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">data</span>: <span class="built_in">any</span></span><br><span class="line">      <span class="attr">timestamp</span>: <span class="built_in">number</span></span><br><span class="line">    &#125;</span><br><span class="line">  &gt; = <span class="keyword">new</span> <span class="title class_">Map</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">readonly</span> <span class="variable constant_">CACHE_TIME</span> = <span class="number">5000</span> <span class="comment">// 缓存时间5秒</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">request</span>(<span class="params"><span class="attr">key</span>: <span class="built_in">string</span>, <span class="attr">fn</span>: () =&gt; <span class="title class_">Promise</span>&lt;<span class="built_in">any</span>&gt;</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> cached = <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">get</span>(key)</span><br><span class="line">    <span class="keyword">const</span> now = <span class="title class_">Date</span>.<span class="title function_">now</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果缓存存在且未过期，直接返回缓存数据</span></span><br><span class="line">    <span class="keyword">if</span> (cached &amp;&amp; now - cached.<span class="property">timestamp</span> &lt; <span class="variable language_">this</span>.<span class="property">CACHE_TIME</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> cached.<span class="property">data</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送新请求</span></span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="title function_">fn</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 更新缓存</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">cache</span>.<span class="title function_">set</span>(key, &#123;</span><br><span class="line">      data,</span><br><span class="line">      <span class="attr">timestamp</span>: now,</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> cacheManager = <span class="keyword">new</span> <span class="title class_">CacheManager</span>()</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getData</span>(<span class="params"><span class="attr">id</span>: <span class="built_in">string</span></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> cacheManager.<span class="title function_">request</span>(<span class="string">`data_<span class="subst">$&#123;id&#125;</span>`</span>, <span class="function">() =&gt;</span> api.<span class="title function_">getData</span>(id))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Vue-中的实践"><a href="#Vue-中的实践" class="headerlink" title="Vue 中的实践"></a>Vue 中的实践</h2><p>在 Vue 项目中，我们可以封装一个通用的请求 Hook：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// useRequest.ts</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> useRequest&lt;T&gt;(<span class="attr">requestFn</span>: <span class="function">() =&gt;</span> <span class="title class_">Promise</span>&lt;T&gt;) &#123;</span><br><span class="line">  <span class="keyword">const</span> loading = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line">  <span class="keyword">const</span> isRequesting = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">execute</span>(<span class="params">...<span class="attr">args</span>: <span class="built_in">any</span>[]</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (isRequesting.<span class="property">value</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      loading.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">      isRequesting.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">      <span class="keyword">const</span> result = <span class="keyword">await</span> requestFn.<span class="title function_">apply</span>(<span class="literal">null</span>, args)</span><br><span class="line">      <span class="keyword">return</span> result</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      loading.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">      isRequesting.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    loading,</span><br><span class="line">    isRequesting,</span><br><span class="line">    execute,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用示例</span></span><br><span class="line"><span class="keyword">const</span> &#123; loading, execute &#125; = <span class="title function_">useRequest</span>(api.<span class="property">getData</span>)</span><br></pre></td></tr></table></figure><h2 id="最佳实践建议"><a href="#最佳实践建议" class="headerlink" title="最佳实践建议"></a>最佳实践建议</h2><ol><li><p><strong>选择合适的方案</strong></p><ul><li>输入搜索类场景使用防抖</li><li>滚动加载类场景使用节流</li><li>表单提交类场景使用请求锁</li><li>数据查询类场景考虑使用缓存</li></ul></li><li><p><strong>合理设置时间间隔</strong></p><ul><li>防抖时间建议 300-500ms</li><li>节流时间根据业务场景设置</li><li>缓存时间要考虑数据实时性要求</li></ul></li><li><p><strong>错误处理</strong></p><ul><li>请求被取消时给出友好提示</li><li>缓存策略要考虑错误情况</li><li>添加适当的日志记录</li></ul></li><li><p><strong>性能优化</strong></p><ul><li>及时清理过期缓存</li><li>避免内存泄漏</li><li>控制并发请求数量</li></ul></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>避免重复请求是前端开发中的重要优化点，通过合理使用：</p><ol><li>防抖和节流</li><li>请求锁</li><li>请求取消</li><li>缓存策略</li></ol><p>可以有效提升应用性能和用户体验。在实际开发中，需要根据具体场景选择合适的解决方案。</p><hr><blockquote><p>参考资料：</p><ol><li>MDN - AbortController</li><li>Vue.js 官方文档</li><li>JavaScript 高级程序设计</li></ol></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="前端开发" scheme="https://sadasdf1235.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="JavaScript" scheme="https://sadasdf1235.github.io/tags/JavaScript/"/>
    
    <category term="Vue" scheme="https://sadasdf1235.github.io/tags/Vue/"/>
    
    <category term="前端" scheme="https://sadasdf1235.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="Web 前端" scheme="https://sadasdf1235.github.io/tags/Web-%E5%89%8D%E7%AB%AF/"/>
    
    <category term="性能优化" scheme="https://sadasdf1235.github.io/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>auto-import</title>
    <link href="https://sadasdf1235.github.io/2025/01/13/auto-import/"/>
    <id>https://sadasdf1235.github.io/2025/01/13/auto-import/</id>
    <published>2025-01-13T01:30:00.000Z</published>
    <updated>2025-01-13T01:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>📝 本文介绍了 auto-import 工具的使用方法和配置说明，帮助开发者提高开发效率。</p></blockquote><h2 id="什么是-auto-import？"><a href="#什么是-auto-import？" class="headerlink" title="什么是 auto-import？"></a>什么是 auto-import？</h2><p>auto-import 是一个前端开发工具，用于自动导入组件、库和模块。</p><h2 id="为什么需要-auto-import？"><a href="#为什么需要-auto-import？" class="headerlink" title="为什么需要 auto-import？"></a>为什么需要 auto-import？</h2><p>在现代前端开发中，组件、库和模块的使用非常频繁。手动导入这些资源不仅耗时，还容易出错。auto-import 的出现就是为了解决这个问题，它可以根据项目结构和代码模式自动导入所需的资源，提高开发效率。</p><h2 id="如何使用-auto-import？"><a href="#如何使用-auto-import？" class="headerlink" title="如何使用 auto-import？"></a>如何使用 auto-import？</h2><p>使用 auto-import 非常简单。首先，你需要在项目中安装 auto-import 工具。然后，你可以在代码中使用 auto-import 提供的 API 来导入所需的资源。</p><h2 id="如何安装-auto-import？"><a href="#如何安装-auto-import？" class="headerlink" title="如何安装 auto-import？"></a>如何安装 auto-import？</h2><p>你可以使用 npm 或 yarn 来安装 auto-import。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install auto-import</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add auto-import</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pnpm add auto-import</span><br></pre></td></tr></table></figure><h2 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* eslint-disable */</span></span><br><span class="line"><span class="comment">/* prettier-ignore */</span></span><br><span class="line"><span class="comment">// @ts-nocheck</span></span><br><span class="line"><span class="comment">// noinspection JSUnusedGlobalSymbols</span></span><br><span class="line"><span class="comment">// Generated by unplugin-auto-import</span></span><br><span class="line"><span class="keyword">export</span> &#123;&#125;</span><br><span class="line"><span class="keyword">declare</span> <span class="variable language_">global</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="title class_">EffectScope</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;EffectScope&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">computed</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;computed&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">createApp</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;createApp&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">customRef</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;customRef&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">defineAsyncComponent</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;defineAsyncComponent&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">defineComponent</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;defineComponent&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">effectScope</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;effectScope&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">getCurrentInstance</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;getCurrentInstance&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">getCurrentScope</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;getCurrentScope&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">h</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;h&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">inject</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;inject&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">markRaw</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;markRaw&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">nextTick</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;nextTick&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onActivated</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;onActivated&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onBeforeMount</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;onBeforeMount&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onBeforeUnmount</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;onBeforeUnmount&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onBeforeUpdate</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;onBeforeUpdate&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onDeactivated</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;onDeactivated&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onErrorCaptured</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;onErrorCaptured&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onMounted</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;onMounted&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onRenderTracked</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;onRenderTracked&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onRenderTriggered</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;onRenderTriggered&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onScopeDispose</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;onScopeDispose&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onServerPrefetch</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;onServerPrefetch&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onUnmounted</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;onUnmounted&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onUpdated</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;onUpdated&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">provide</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;provide&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">reactive</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;reactive&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">readonly</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;readonly&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">ref</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;ref&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">resolveComponent</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;resolveComponent&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">shallowReactive</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;shallowReactive&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">shallowReadonly</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;shallowReadonly&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">shallowRef</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;shallowRef&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">toRaw</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;toRaw&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">toRef</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;toRef&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">toRefs</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;toRefs&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">toValue</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;toValue&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">triggerRef</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;triggerRef&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">unref</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;unref&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useAttrs</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;useAttrs&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useCssModule</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;useCssModule&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useCssVars</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;useCssVars&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useSlots</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;useSlots&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">watch</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;watch&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">watchEffect</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;watchEffect&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">watchPostEffect</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;watchPostEffect&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">watchSyncEffect</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue&#x27;</span>)[<span class="string">&#x27;watchSyncEffect&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onBeforeRouteLeave</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue-router&#x27;</span>)[<span class="string">&#x27;onBeforeRouteLeave&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onBeforeRouteUpdate</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue-router&#x27;</span>)[<span class="string">&#x27;onBeforeRouteUpdate&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useLink</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;vue-router&#x27;</span>)[<span class="string">&#x27;useLink&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">createPinia</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;pinia&#x27;</span>)[<span class="string">&#x27;createPinia&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">defineStore</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;pinia&#x27;</span>)[<span class="string">&#x27;defineStore&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">getActivePinia</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;pinia&#x27;</span>)[<span class="string">&#x27;getActivePinia&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">mapActions</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;pinia&#x27;</span>)[<span class="string">&#x27;mapActions&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">mapGetters</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;pinia&#x27;</span>)[<span class="string">&#x27;mapGetters&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">mapState</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;pinia&#x27;</span>)[<span class="string">&#x27;mapState&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">mapStores</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;pinia&#x27;</span>)[<span class="string">&#x27;mapStores&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">mapWritableState</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;pinia&#x27;</span>)[<span class="string">&#x27;mapWritableState&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">setActivePinia</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;pinia&#x27;</span>)[<span class="string">&#x27;setActivePinia&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">setMapStoreSuffix</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;pinia&#x27;</span>)[<span class="string">&#x27;setMapStoreSuffix&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">storeToRefs</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;pinia&#x27;</span>)[<span class="string">&#x27;storeToRefs&#x27;</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// for type re-export</span></span><br><span class="line"><span class="keyword">declare</span> <span class="variable language_">global</span> &#123;</span><br><span class="line">  <span class="comment">// @ts-ignore</span></span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">type</span> &#123;</span><br><span class="line">    <span class="title class_">Component</span>,</span><br><span class="line">    <span class="title class_">ComponentPublicInstance</span>,</span><br><span class="line">    <span class="title class_">ComputedRef</span>,</span><br><span class="line">    <span class="title class_">InjectionKey</span>,</span><br><span class="line">    <span class="title class_">PropType</span>,</span><br><span class="line">    <span class="title class_">Ref</span>,</span><br><span class="line">    <span class="title class_">VNode</span>,</span><br><span class="line">    <span class="title class_">WritableComputedRef</span>,</span><br><span class="line">  &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="uniapp"><a href="#uniapp" class="headerlink" title="uniapp"></a>uniapp</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* eslint-disable */</span></span><br><span class="line"><span class="comment">/* prettier-ignore */</span></span><br><span class="line"><span class="comment">// @ts-nocheck</span></span><br><span class="line"><span class="comment">// noinspection JSUnusedGlobalSymbols</span></span><br><span class="line"><span class="comment">// Generated by unplugin-auto-import</span></span><br><span class="line"><span class="keyword">export</span> &#123;&#125;</span><br><span class="line"><span class="keyword">declare</span> <span class="variable language_">global</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onAddToFavorites</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onAddToFavorites&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onBackPress</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onBackPress&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onError</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onError&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onHide</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onHide&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onLaunch</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onLaunch&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onLoad</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onLoad&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onNavigationBarButtonTap</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onNavigationBarButtonTap&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onNavigationBarSearchInputChanged</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onNavigationBarSearchInputChanged&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onNavigationBarSearchInputClicked</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onNavigationBarSearchInputClicked&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onNavigationBarSearchInputConfirmed</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onNavigationBarSearchInputConfirmed&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onNavigationBarSearchInputFocusChanged</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onNavigationBarSearchInputFocusChanged&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onPageNotFound</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onPageNotFound&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onPageScroll</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onPageScroll&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onPullDownRefresh</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onPullDownRefresh&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onReachBottom</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onReachBottom&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onReady</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onReady&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onResize</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onResize&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onShareAppMessage</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onShareAppMessage&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onShareTimeline</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onShareTimeline&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onShow</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onShow&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onTabItemTap</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onTabItemTap&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onThemeChange</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onThemeChange&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onUnhandledRejection</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onUnhandledRejection&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onUnload</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@dcloudio/uni-app&#x27;</span>)[<span class="string">&#x27;onUnload&#x27;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="vueuse"><a href="#vueuse" class="headerlink" title="vueuse"></a>vueuse</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* eslint-disable */</span></span><br><span class="line"><span class="comment">/* prettier-ignore */</span></span><br><span class="line"><span class="comment">// @ts-nocheck</span></span><br><span class="line"><span class="comment">// noinspection JSUnusedGlobalSymbols</span></span><br><span class="line"><span class="comment">// Generated by unplugin-auto-import</span></span><br><span class="line"><span class="keyword">export</span> &#123;&#125;</span><br><span class="line"><span class="keyword">declare</span> <span class="variable language_">global</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">computedAsync</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;computedAsync&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">computedEager</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;computedEager&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">computedInject</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;computedInject&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">computedWithControl</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;computedWithControl&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">controlledComputed</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;controlledComputed&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">controlledRef</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;controlledRef&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">createEventHook</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;createEventHook&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">createGlobalState</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;createGlobalState&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">createInjectionState</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;createInjectionState&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">createReactiveFn</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;createReactiveFn&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">createReusableTemplate</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;createReusableTemplate&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">createSharedComposable</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;createSharedComposable&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">createTemplatePromise</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;createTemplatePromise&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">createUnrefFn</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;createUnrefFn&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">debouncedRef</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;debouncedRef&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">debouncedWatch</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;debouncedWatch&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">eagerComputed</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;eagerComputed&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">extendRef</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;extendRef&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">ignorableWatch</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;ignorableWatch&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">makeDestructurable</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;makeDestructurable&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onClickOutside</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;onClickOutside&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onKeyStroke</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;onKeyStroke&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onLongPress</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;onLongPress&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">onStartTyping</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;onStartTyping&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">pausableWatch</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;pausableWatch&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">reactify</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;reactify&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">reactifyObject</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;reactifyObject&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">reactiveComputed</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;reactiveComputed&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">reactiveOmit</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;reactiveOmit&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">reactivePick</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;reactivePick&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">refAutoReset</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;refAutoReset&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">refDebounced</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;refDebounced&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">refDefault</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;refDefault&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">refThrottled</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;refThrottled&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">refWithControl</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;refWithControl&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">resolveRef</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;resolveRef&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">resolveUnref</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;resolveUnref&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">syncRef</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;syncRef&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">syncRefs</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;syncRefs&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">templateRef</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;templateRef&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">throttledRef</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;throttledRef&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">throttledWatch</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;throttledWatch&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">tryOnBeforeMount</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;tryOnBeforeMount&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">tryOnBeforeUnmount</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;tryOnBeforeUnmount&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">tryOnMounted</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;tryOnMounted&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">tryOnScopeDispose</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;tryOnScopeDispose&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">tryOnUnmounted</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;tryOnUnmounted&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">until</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;until&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">unrefElement</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;unrefElement&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useActiveElement</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useActiveElement&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useAnimate</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useAnimate&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useAsyncQueue</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useAsyncQueue&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useAsyncState</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useAsyncState&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useBase64</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useBase64&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useBattery</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useBattery&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useBluetooth</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useBluetooth&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useBreakpoints</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useBreakpoints&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useBroadcastChannel</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useBroadcastChannel&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useBrowserLocation</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useBrowserLocation&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useCached</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useCached&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useClipboard</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useClipboard&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useCloned</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useCloned&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useColorMode</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useColorMode&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useConfirmDialog</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useConfirmDialog&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useCounter</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useCounter&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useCssVar</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useCssVar&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useCurrentElement</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useCurrentElement&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useCycleList</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useCycleList&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useDark</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useDark&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useDateFormat</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useDateFormat&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useDebounce</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useDebounce&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useDebounceFn</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useDebounceFn&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useDebouncedRefHistory</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useDebouncedRefHistory&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useElementVisibility</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useElementVisibility&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useIdle</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useIdle&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useImage</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useImage&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useInfiniteScroll</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useInfiniteScroll&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useIntersectionObserver</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useIntersectionObserver&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useInterval</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useInterval&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useIntervalFn</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useIntervalFn&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useKeyModifier</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useKeyModifier&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useLastChanged</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useLastChanged&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useLocalStorage</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useLocalStorage&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useMagicKeys</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useMagicKeys&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useManualRefHistory</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useManualRefHistory&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useMediaControls</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useMediaControls&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useMediaQuery</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useMediaQuery&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useMemoize</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useMemoize&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useMemory</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useMemory&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useMounted</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useMounted&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useMouse</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useMouse&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useMouseInElement</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useMouseInElement&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useMousePressed</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useMousePressed&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useMutationObserver</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useMutationObserver&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useNavigatorLanguage</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useNavigatorLanguage&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useNetwork</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useNetwork&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useNow</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useNow&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useObjectUrl</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useObjectUrl&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useOffsetPagination</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useOffsetPagination&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useOnline</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useOnline&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">usePageLeave</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;usePageLeave&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useParallax</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useParallax&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useParentElement</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useParentElement&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">usePerformanceObserver</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;usePerformanceObserver&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">usePermission</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;usePermission&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">usePointer</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;usePointer&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">usePointerLock</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;usePointerLock&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">usePointerSwipe</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;usePointerSwipe&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useScreenOrientation</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useScreenOrientation&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useScreenSafeArea</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useScreenSafeArea&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useScriptTag</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useScriptTag&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useScroll</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useScroll&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useScrollLock</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useScrollLock&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useSessionStorage</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useSessionStorage&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useShare</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useShare&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useSorted</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useSorted&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useSpeechRecognition</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useSpeechRecognition&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useSpeechSynthesis</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useSpeechSynthesis&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useStepper</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useStepper&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useStorage</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useStorage&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useStorageAsync</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useStorageAsync&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useStyleTag</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useStyleTag&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useSupported</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useSupported&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useSwipe</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useSwipe&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useTemplateRefsList</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useTemplateRefsList&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useTextDirection</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useTextDirection&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useTextSelection</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useTextSelection&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useTextareaAutosize</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useTextareaAutosize&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useThrottle</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useThrottle&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useThrottleFn</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useThrottleFn&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useThrottledRefHistory</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useThrottledRefHistory&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useTimeAgo</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useTimeAgo&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useTimeout</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useTimeout&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useTimeoutFn</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useTimeoutFn&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useTimeoutPoll</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useTimeoutPoll&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useTimestamp</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useTimestamp&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useTitle</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useTitle&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useToNumber</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useToNumber&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useToString</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useToString&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useToggle</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useToggle&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useTransition</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useTransition&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useUrlSearchParams</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useUrlSearchParams&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useUserMedia</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useUserMedia&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useVModel</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useVModel&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useVModels</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useVModels&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useVibrate</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useVibrate&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useVirtualList</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useVirtualList&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useWakeLock</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useWakeLock&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useWebNotification</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useWebNotification&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useWebSocket</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useWebSocket&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useWebWorker</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useWebWorker&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useWebWorkerFn</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useWebWorkerFn&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useWindowFocus</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useWindowFocus&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useWindowScroll</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useWindowScroll&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">useWindowSize</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;useWindowSize&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">watchArray</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;watchArray&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">watchAtMost</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;watchAtMost&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">watchDebounced</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;watchDebounced&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">watchDeep</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;watchDeep&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">watchIgnorable</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;watchIgnorable&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">watchImmediate</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;watchImmediate&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">watchOnce</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;watchOnce&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">watchPausable</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;watchPausable&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">watchThrottled</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;watchThrottled&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">watchTriggerable</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;watchTriggerable&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">watchWithFilter</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;watchWithFilter&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">whenever</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;whenever&#x27;</span>]</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">toReactive</span>: <span class="keyword">typeof</span> <span class="keyword">import</span>(<span class="string">&#x27;@vueuse/core&#x27;</span>)[<span class="string">&#x27;toReactive&#x27;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>auto-import 是一个非常实用的前端开发工具，它可以大大提高开发效率。希望本文能帮助你更好地理解和使用 auto-import。</p>]]></content>
    
    
    <summary type="html">auto-import 是一个前端开发工具，用于自动导入组件、库和模块。</summary>
    
    
    
    <category term="前端开发" scheme="https://sadasdf1235.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="前端开发" scheme="https://sadasdf1235.github.io/tags/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    <category term="auto-import" scheme="https://sadasdf1235.github.io/tags/auto-import/"/>
    
  </entry>
  
</feed>
